version: "3"
services:


  #####################################################################################
              #DATABASES ( Postgres db, Mysql Maria db ,H2 db, Mongodb )
  #####################################################################################

  #Start running mysql-db for two databases (orders_service-db, vehicles_service-db)
  mysql-db:
    image: custom-mysql-mariadb-image
    container_name: mysql-db
    environment:
      MYSQLDB_USER: root
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASES: orders_service-db,vehicles-service-db
      MYSQL_USER: sa
    volumes:
      - path_to_data:/config
    ports:
      - "3306:3306"
    restart: unless-stopped
    networks:
      - micros
  #Start running mysql-db for two databases (orders_service-db, vehicles_service-db)



  # Start Postgres database
      #(the POSTGRES_DB env variable declare the database offices_service coz we can't use
      #  ?createIfNotExist=true like mysql oracle ... like this mysql url example
      #  url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:orders_service-db}?createDatabaseIfNotExist=true
  postgres-db:
    image: postgres:alpine
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USERNAME=postgres
      - POSTGRES_DB=offices_service_db
    networks:
      - micros
  #End Postgres database
  #Start Mongo db
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    ports:
      - "27017:27017"
    networks:
      - micros
  #End mongodb
  #####################################################################################
        #SERVICES ( offices-service , cars-service , orders-service , customers-service )
        #I have added also oracle db , but it's docker image is deprecated so if you have it locally you should only remove the comments
  #####################################################################################


  #Start offices-service declaration
  offices-service:
    image: offices-service
    container_name: offices-service
    ports:
      - "8084:8084"
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=password
      - POSTGRES_USERNAME=postgres
      - HOST_NAME=config-service
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
      - SPRING_CONFIG_PORT=8888
      - ZIPKIN_SERVER=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - postgres-db
      - consul-server
      - config-service
      - zipkin-server
    networks:
      - micros
  #End office services


  #Start Cars service
  cars-service:
    image: cars-service
    ports:
      - "8082:8082"
    environment:
      - MYSQL_HOST=mysql-db
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=1234
      - MYSQL_USERNAME=root
      - HOST_NAME=config-service
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
      - SPRING_CONFIG_PORT=8888
      - ZIPKIN_SERVER=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - mysql-db
      - zipkin-server
      - config-service
      - consul-server
    networks:
      - micros
  #End Cars database

  # Start orders service
  orders-service:
    image: orders-service
    ports:
      - "8081:8081"
    environment:
      - MYSQL_HOST=mysql-db
      - MYSQL_PORT=3306
      - MYSQL_PASSWORD=1234
      - MYSQL_USERNAME=root
      - HOST_NAME=config-service
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
      - SPRING_CONFIG_PORT=8888
      - ZIPKIN_SERVER=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - mysql-db
      - zipkin-server
      - config-service
      - consul-server
    networks:
      - micros
  #End orders service

  #Start Customers Service
  customers-service:
    image: customers-service:latest
    container_name: customers-service
    ports:
      - "8083:8083"
    environment:
      - HOST_NAME=config-service
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
      - SPRING_CONFIG_PORT=8888
      - ZIPKIN_SERVER=http://zipkin-server:9411/api/v2/spans
    links:
      - mongodb
      - consul-server
      - config-service
    depends_on:
      - zipkin-server
    networks:
      - micros
  # End customers service
    #####################################################################################
      #TOOLS :
        # zipkin-server :traceability ,
        # consul-server : services registry , automate network configurations, discover services, and enable secure
        # config-service (spring cloud config ) : storing and serving distributed configurations across multiple applications and environments
        # spring-cloud-gateway : provide routing, security, and API management services for microservices architecture.
  #####################################################################################
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-server
    environment:
      - STORAGE_TYPE=mem
       #Uncomment to enable debug logging
      - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG -Dlogging.level.zipkin2=DEBUG
    ports:
      - "9411:9411"
    networks:
      - micros
  #Start consul server
  consul-server:
    image: consul
    container_name: consul-server
    restart: always
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    networks:
      - micros
  #End Consul server

  #Start Spring cloud config
  config-service:
    image: config-service
    ports:
      - "8888:8888"
    environment:
      - CONSUL_HOST=consul-server
      - CONSUL_PORT=8500
    depends_on:
      - consul-server
    networks:
      - micros
  #End spring cloud config
  #Start Gateway Service
  gateway-service:
    image: gateway-service
    container_name: gateway-service
    ports:
      - "9999:9999"
    environment:
      - HOST_NAME=config-service
      - CONSUL_PORT=8500
      - CONSUL_HOST=consul-server
      - SPRING_CONFIG_PORT=8888
      - ZIPKIN_SERVER=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - zipkin-server
      - consul-server
      - config-service
    networks:
      - micros
  #End Gateway Service

networks:
  micros:
    driver: bridge

volumes:
  path_to_data:
  dbvol:
